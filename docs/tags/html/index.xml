<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>html on Brian M Hunt</title>
    <link>https://brianmhunt.github.io/tags/html/</link>
    <description>Recent content in html on Brian M Hunt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Sep 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://brianmhunt.github.io/tags/html/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Knockout and foreign keys extender</title>
      <link>https://brianmhunt.github.io/post/2014-01-26-knockout-and-foreign-keys/</link>
      <pubDate>Sun, 26 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://brianmhunt.github.io/post/2014-01-26-knockout-and-foreign-keys/</guid>
      <description>What is this? An extension of Knockout observables, making the observables into keys to another model. The model and its loading status are added as part of a property, .fk, to the observable.
Why is it important? It makes some hard things easy, and some things once impossible just hard. In particular, it makes it easy to define models that load keys, and trivially access the models those keys represent.</description>
    </item>
    
    <item>
      <title>Asynchronous client-side Javascript page loading</title>
      <link>https://brianmhunt.github.io/post/2014-01-22-making-everything-async/</link>
      <pubDate>Wed, 22 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://brianmhunt.github.io/post/2014-01-22-making-everything-async/</guid>
      <description>What is it? A process for loading our script resources asynchronously, with one &amp;lt;script&amp;gt; tag, like this:
&amp;lt;script async src=&amp;#39;/all.js-{{ cache_buster }}&amp;#39;&amp;gt;&amp;lt;/script&amp;gt; This all.js file loads all our Javascript, external services, templates, and any RESTful resources from our server.
We discuss the cache_buster in the next post.
Why is it important? Having one file for Javascript gives us:
 one file to request; improved cachability; parallel requests for our resources; centralizing where we control our loading; fine-grained control of the loading process.</description>
    </item>
    
  </channel>
</rss>